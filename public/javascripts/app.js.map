{"version":3,"sources":["app/scripts/app.js","app/scripts/profile.js"],"names":[],"mappingshOA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["var albumPicasso = {\n  name: 'The Colors',\n  artist: 'Pablo Picasso',\n  label: 'Cubism',\n  year: '1881',\n  albumArtUrl: '/images/album-placeholder.png',\n  \n  songs: [\n    { name: 'Blue', length: '4:26', audioUrl: '/music/placeholders/blue' },\n    { name: 'Green', length: '3:14', audioUrl: '/music/placeholders/green' },\n    { name: 'Red', length: '5:01', audioUrl: '/music/placeholders/red' },\n    { name: 'Pink', length: '3:21', audioUrl: '/music/placeholders/pink' },\n    { name: 'Magenta', length: '2:15', audioUrl: '/music/placeholders/magenta' }\n  ]\n};\n\nblocJams = angular.module('BlocJams', ['ui.router']);\n\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n  $locationProvider.html5Mode(true);\n\n  $stateProvider.state('landing', {\n    url: '/',\n    controller: 'Landing.controller',\n    templateUrl: '/templates/landing.html'\n  });\n\n   $stateProvider.state('collection', {\n     url: '/collection',\n     controller: 'Collection.controller',\n     templateUrl: '/templates/collection.html'\n  });\n\n   $stateProvider.state('album', {\n    url: '/album',\n    templateUrl: '/templates/album.html',\n    controller: 'Album.controller'\n   });\n\n}]);\n\n// This is a cleaner way to call the controller than crowding it on the module definition.\nblocJams.controller('Landing.controller', ['$scope', function($scope) {\n\n  $scope.subText = \"Turn the music up!\";\n\n  $scope.subTextClicked = function() {\n    $scope.subText += '!';\n  };\n\n    $scope.albumURLs = [\n      '/images/album-placeholders/album-1.jpg',\n      '/images/album-placeholders/album-2.jpg',\n      '/images/album-placeholders/album-3.jpg',\n      '/images/album-placeholders/album-4.jpg',\n      '/images/album-placeholders/album-5.jpg',\n      '/images/album-placeholders/album-6.jpg',\n      '/images/album-placeholders/album-7.jpg',\n      '/images/album-placeholders/album-8.jpg',\n      '/images/album-placeholders/album-9.jpg',\n    ];\n}]);\n\nblocJams.controller('Collection.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.albums = [];\n    for (var i = 0; i < 33; i++) {\n      $scope.albums.push(angular.copy(albumPicasso));\n    }\n\n    $scope.playAlbum = function(album) {\n      SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n    }\n}]);\n\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.album = angular.copy(albumPicasso);\n\n  var hoveredSong = null;\n\n  $scope.onHoverSong = function(song) {\n    hoveredSong = song;\n  };\n\n  $scope.offHoverSong = function(song) {\n    hoveredSong = null;\n  };\n\n  $scope.getSongState = function(song) {\n    if (song === SongPlayer.currentSong && SongPlayer.playing) {\n      return 'playing';\n    }\n    else if (song === hoveredSong) {\n      return 'hovered';\n    }\n    return 'default';\n  };\n\n  $scope.playSong = function(song) {\n    SongPlayer.setSong($scope.album, song);\n  };\n\n  $scope.pauseSong = function(song) {\n    SongPlayer.pause();\n  };\n\n}]);\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.songPlayer = SongPlayer;\n}]);\n\nblocJams.service('SongPlayer', function() {\n  var currentSoundFile = null;\n  var trackIndex = function(album, song) {\n    return album.songs.indexOf(song);\n  };\n\n  return {\n    currentSong: null,\n    currentAlbum: null,\n    playing: false,\n\n    play: function() {\n      this.playing = true;\n      currentSoundFile.play();\n    },\n    pause: function() {\n      this.playing = false;\n      currentSoundFile.pause();\n    },\n    next: function() {\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n      currentTrackIndex++;\n      if (currentTrackIndex >= this.currentAlbum.songs.length) {\n        currentTrackIndex = 0;\n      }\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n    },\n    previous: function() {\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n      currentTrackIndex--;\n      if (currentTrackIndex < 0) {\n        currentTrackIndex = this.currentAlbum.songs.length - 1;\n      }\n\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n    },\n\n    setSong: function(album, song) {\n      if (currentSoundFile) {\n        currentSoundFile.stop();\n      }\n      this.currentAlbum = album;\n      this.currentSong = song;\n      currentSoundFile = new buzz.sound(song.audioUrl, {\n        formats: [ \"mp3\" ],\n        preload: true\n      });\n\n      this.play();\n    }\n  };\n});\n\nblocJams.directive('slider', ['$document', function($document) {\n\n  // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n  var calculateSliderPercentFromMouseEvent = function($slider, event) {\n    var offsetX = event.pageX - $slider.offset().left; // Distance from left\n    var sliderWidth = $slider.width(); // Width of slider\n    var offsetXPercent = (offsetX / sliderWidth);\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(1, offsetXPercent);\n    return offsetXPercent;\n  }\n\n  return {\n    templateUrl: '/templates/directives/slider.html',\n    replace: true,\n    restrict: 'E',\n    scope: {}, // Creates a scope that exists only in this directive.\n    link: function(scope, element, attributes) {\n      // These values represent the progress into the song/volume bar, and its max value.\n      // For now, we're supplying arbitrary initial and max values.\n      scope.value = 0;\n      scope.max = 200;\n      var $seekBar = $(element);\n\n      var percentString = function () {\n        percent = Number(scope.value) / Number(scope.max) * 100;\n        return percent + \"%\";\n      }\n\n      scope.fillStyle = function() {\n        return {width: percentString()};\n      }\n\n      scope.thumbStyle = function() {\n        return {left: percentString()};\n      }\n\n      scope.onClickSlider = function(event) {\n        var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n        scope.value = percent * scope.max;\n      }\n\n      scope.trackThumb = function() {\n        $document.bind('mousemove.thumb', function(event){\n          var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n          scope.$apply(function(){\n            scope.value = percent * scope.max;\n          });\n        });\n\n        //cleanup\n        $document.bind('mouseup.thumb', function(){\n          $document.unbind('mousemove.thumb');\n          $document.unbind('mouseup.thumb');\n        });\n      };\n    }\n  };\n}]);","// Holds the name of our tab button container for selection later in the function\nvar tabsContainer = \".user-profile-tabs-container\"\nvar selectTabHandler = function(event) {\n  $tab = $(this);\n  $(tabsContainer + \" li\").removeClass('active');\n  $tab.parent().addClass('active');\n  selectedTabName = $tab.attr('href');\n  console.log(selectedTabName);\n  $(\".tab-pane\").addClass('hidden');\n  $(selectedTabName).removeClass('hidden');\n  event.preventDefault();\n};\n\nif (document.URL.match(/\\/profile.html/)) {\n  $(document).ready(function() {\n    var $tabs = $(tabsContainer + \" a\");\n    $tabs.click(selectTabHandler);\n    $tabs[0].click();\n  });\n}"]}